name: Deploy NextTool # 工作流名称，显示在 GitHub Actions 页面上

on:
  push:
    branches:
      - main # 当 main 分支有 push 时触发部署

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 使用 GitHub 提供的 Ubuntu 最新虚拟机运行

    steps:
      # 1️⃣ 拉取仓库代码
      - name: Checkout code
        uses: actions/checkout@v3 # 官方 Action，把 GitHub 仓库代码拉到虚拟机

      # 2️⃣ 安装 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # 指定 Node.js 版本为 18

      # 3️⃣ 安装项目依赖
      - name: Install dependencies
        run: npm install # 安装 package.json 中的依赖

      # 4️⃣ 构建 Next.js 项目
      - name: Build project
        run: npm run build # SSR 模式生成 .next 目录，SSG 可结合 next export

      # ✅ 调试 Secrets
      - name: Debug Secrets
        run: |
          echo "SERVER_USER: ${{ secrets.SERVER_USER }}"
          echo "SERVER_IP: ${{ secrets.SERVER_IP }}"

      # 5️⃣ 上传构建产物到服务器
      - name: Upload to server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_IP }} # 服务器 IP（GitHub Secrets）
          username: ${{ secrets.SERVER_USER }} # 服务器用户名
          password: ${{ secrets.SERVER_PASSWORD }} # 服务器密码/令牌
          source: ".next,package.json,ecosystem.config.js" # 要上传的文件和目录
          target: "/var/www/tool" # 服务器目标路径

      # 6️⃣ 重启或启动 PM2 服务
      - name: Restart PM2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }} # SSH 登录服务器
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /var/www/tool               # 进入项目目录
            pm2 restart next-app || pm2 start ecosystem.config.js
            # 如果 PM2 进程已存在，则重启；如果不存在，则用 ecosystem.config.js 启动
